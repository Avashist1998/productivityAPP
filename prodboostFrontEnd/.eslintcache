[{"/Users/divyavashist/TAMUHack 2021/prodboost/src/index.js":"1","/Users/divyavashist/TAMUHack 2021/prodboost/src/App.js":"2","/Users/divyavashist/TAMUHack 2021/prodboost/src/reportWebVitals.js":"3","/Users/divyavashist/TAMUHack 2021/prodboost/src/components/Form.js":"4","/Users/divyavashist/TAMUHack 2021/prodboost/src/components/TodoList.js":"5","/Users/divyavashist/TAMUHack 2021/prodboost/src/components/Todo.js":"6","/Users/divyavashist/TAMUHack 2021/prodboost/src/components/Calendar.js":"7"},{"size":500,"mtime":1612044468392,"results":"8","hashOfConfig":"9"},{"size":2882,"mtime":1612132763951,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1612044468393,"results":"11","hashOfConfig":"9"},{"size":1673,"mtime":1612130164443,"results":"12","hashOfConfig":"9"},{"size":436,"mtime":1612128107668,"results":"13","hashOfConfig":"9"},{"size":1687,"mtime":1612128461168,"results":"14","hashOfConfig":"9"},{"size":336,"mtime":1612105674848,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1n5mj9y",{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"/Users/divyavashist/TAMUHack 2021/prodboost/src/index.js",[],["33","34"],"/Users/divyavashist/TAMUHack 2021/prodboost/src/App.js",["35","36","37"],"/Users/divyavashist/TAMUHack 2021/prodboost/src/reportWebVitals.js",[],"/Users/divyavashist/TAMUHack 2021/prodboost/src/components/Form.js",["38"],"import React from \"react\";\nimport TodoList from \"./TodoList\";\nimport Async from 'react-async';\n\nconst Form = (props) => {\n    const inputTextHandler = (e) => {\n        props.setInputItem(e.target.value);\n    };\n    const inputDateHandler = (e) => {\n        props.setInputDate(e.target.value);\n    };\n    async function addItem(userName, itemName, date) {\n      const url = \"http://192.168.1.129:8000/list/?\" + new URLSearchParams({\"userName\":userName});\n      const data = {\"name\": itemName, \"d\": date};\n      var response = await fetch(url, {method: \"POST\",\n          headers: {\n              'Content-Type': 'application/json;charset=UTF-8'\n          },\n          body: JSON.stringify(data),\n      });\n      console.log(response)\n      return response.json();\n  }\n    let submitTodoHandler = async (e) => {\n        e.preventDefault();\n        const data = await addItem(props.userName, props.inputItem, props.inputDate);\n        var inputId = data.data[0].id;\n        props.setTodos([ ...props.todos, {text: props.inputItem, completed: false, id: inputId}]);\n        props.setInputItem(\"\");\n    };\n    return (\n      <Async>\n    <form id=\"inputform\">\n      <input value={props.inputItem} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\n      <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\n        <i className=\"fas fa-plus-square\"></i>\n      </button>\n      <div className=\"select\">\n        <input value={props.inputDate} onChange={inputDateHandler} type=\"date\" placeholder=\"mm-dd-yyyy\"  defaultValue=\"01-30-2021\" min=\"01-01-1990\" max=\"01-01-2050\"></input>\n      </div>\n    </form>\n    </Async>\n    )\n};\nexport default Form;\n","/Users/divyavashist/TAMUHack 2021/prodboost/src/components/TodoList.js",[],"/Users/divyavashist/TAMUHack 2021/prodboost/src/components/Todo.js",[],"/Users/divyavashist/TAMUHack 2021/prodboost/src/components/Calendar.js",["39"],"import React from \"react\";\n\n\nconst Calendar = () => {\n    return (\n        <html>\n        <div className=\"vl\">\n        <img className=\"Calendar\" src=\"https://7calendar.com/png/landscape/Printable-January-2021-Blank-Calendar-A4-A3-Legal-Paper-Sizes-Free-en_1.png\"></img>\n        </div>\n        </html>\n\n    )\n};\nexport default Calendar;\n",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":29,"column":11,"nodeType":"46","messageId":"47","endLine":29,"endColumn":18},{"ruleId":"48","severity":1,"message":"49","line":53,"column":14,"nodeType":"50","endLine":56,"endColumn":4},{"ruleId":"48","severity":1,"message":"51","line":56,"column":5,"nodeType":"52","endLine":56,"endColumn":7,"suggestions":"53"},{"ruleId":"44","severity":1,"message":"54","line":2,"column":8,"nodeType":"46","messageId":"47","endLine":2,"endColumn":16},{"ruleId":"55","severity":1,"message":"56","line":8,"column":9,"nodeType":"57","endLine":8,"endColumn":153},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'options' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'getAllId' and 'todos'. Either include them or remove the dependency array.","ArrayExpression",["60"],"'TodoList' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"61","fix":"62"},"Update the dependencies array to be: [getAllId, todos]",{"range":"63","text":"64"},[1826,1828],"[getAllId, todos]"]